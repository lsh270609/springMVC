
Interceptor

	AOP - Aspect Oriented Programming(관점 지향 프로그래밍)
	
	interceptor 는 요청 주소(request: url / uri) 에 대해
	관심을 갖고 요청이 발생하게 되면 요청 주소를 확인해서
	Controller 의 메소드를 호출하기 전이나 후에
	다른 메소드를 호출할 수 있도록 가로채가는 것
	
	요청 발생시 호출되는 메소드의 중복되는 부분이 있는 경우,
	interceptor 를 사용해서 처리함.
	
	로그인 여부 확인, 회원 등급별 사용권한 확인 등의
	작업 처리할 때 주로 사용
	

Interceptor 구현하기

	interceptor 는 HandlerInterceptor 인터페이스를 구현하거나
	HandlerInterceptorAdapter 클래스를 상속받은 클래스를 작성한 후
	상속받은 메소드를 overriding 해서 작성함.
	
	preHandle() 메소드
		Controller 의 메소드가 호출되기 전에 자동으로 호출되는 메소드
		이 메소드가 false 를 반환하면 code 의 흐름이 중단됨
		
	postHandle() 메소드
		Controller 의 메소드의 수행이 완료되고
		View  처리를 수행하기 전에 자동으로 호출되는 메뉴
		
	afterCompletiton() 메소드
		View 처리까지 완료하고 응답결과(response)가 Client의 
		브라우저로 전달되기 전에 자동으로 호출되는 메소드
		

Interceptor 등록하기 : ServletAppContext 클래스에 등록함 
	
	public void addInterceptors(InterceptorRegistry registry) {
		WebMvcConfigurer.super.addInterceptors(registry);
		TestInterceptor1 inter1 = new TestInterceptor1();
		InterceptorRegistration reg1 = registry.addInterceptor(inter1);
		// InterceptorRegistration 클래스의 addPathPatterns 메소드의 argument 로 url pattern 을 지정함
		reg1.addPathPatterns("/test1");
	}
	
pattern
	* : 이름 하나를 의미. 글자수, 글자 등에 제한 x
	? : 글자 하나만
	** : 하위 이름까지 포함하고 글자수, 글자 등에 제한 x 
	
pattern 등록
	addPathPatterns, <mapping> : interceptor가 가로채는 (url)주소를 등록함.
	excludePathPatterns, ,exclude-mapping : interceptor가 가로채지 않을 (url) 주소를 등록함